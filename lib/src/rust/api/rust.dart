// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.8.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// These functions are ignored because they are not marked as `pub`: `ensure_global_rt`, `get_client`

/// Connects to the given NATS server and returns a status message.
/// (This will create a persistent connection.)
String connectSync({required String natsUrl}) =>
    RustLib.instance.api.crateApiRustConnectSync(natsUrl: natsUrl);

/// Disconnects from NATS by dropping the global client.
String disconnectSync() => RustLib.instance.api.crateApiRustDisconnectSync();

/// Sends a request on the specified subject with the provided message,
/// waits for a response, and returns the response as a UTF-8 string.
String sendRequestSync(
        {required String natsUrl,
        required String subject,
        required String message}) =>
    RustLib.instance.api.crateApiRustSendRequestSync(
        natsUrl: natsUrl, subject: subject, message: message);

/// Starts a responder that listens on the given subject and replies with the provided reply message.
/// The responder runs as a background task.
String startResponderSync(
        {required String natsUrl,
        required String subject,
        required String replyMessage}) =>
    RustLib.instance.api.crateApiRustStartResponderSync(
        natsUrl: natsUrl, subject: subject, replyMessage: replyMessage);

/// Stops the responder by aborting its background task.
String stopResponderSync() =>
    RustLib.instance.api.crateApiRustStopResponderSync();
